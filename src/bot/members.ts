import { Context } from "telegraf";
import { membersBot, botUrlSuffix } from "../constants";
import type { RunMode, UserData } from "../types";
import { decodeUserId, generateReferralLink } from "./helper";
import { findUser, updateOrSave } from "../repo/user-repo";

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
membersBot.start(async (ctx: Context) => {
  const id = String(ctx.from?.id);
  const firstName = ctx.from?.first_name || "–ù–µ—Ç –∏–º–µ–Ω–∏";
  const username = ctx.from?.username;

  const userData: UserData = { id, firstName, username };

  // @ts-expect-error
  const startParams = ctx.startPayload; // –ü–∞—Ä–∞–º–µ—Ç—Ä –∏–∑ —Å—Å—ã–ª–∫–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä, ref_12345
  // –ï—Å–ª–∏ –µ—Å—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä ref_*, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–∏–≥–ª–∞—à–∞—é—â–µ–º
  if (startParams && startParams.startsWith("ref_")) {
    const referrerId = decodeUserId(startParams.split("_")[1]); // –ò–∑–≤–ª–µ–∫–∞–µ–º ID –ø—Ä–∏–≥–ª–∞—à–∞—é—â–µ–≥–æ
    userData.invitedBy = referrerId;

    await updateOrSave(userData);

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –¥–ª—è –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∫ –≥—Ä—É–ø–ø–µ
    const referrerUser = await findUser(referrerId);
    let msg = '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–æ–≤–æ—Ä–∫–∏–Ω–≥ –º–∞—Å—Ç–µ—Ä—Å–∫—É—é "–î–µ–¥–æ–∫"!\n\n';
    msg += `–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–≤—à–∏—Å—å –≤ –Ω–∞—à–µ–º —Å–æ–æ–±—â–µ—Å—Ç–≤–µ –≤—ã —É–≤–µ–ª–∏—á–∏—Ç–µ —à–∞–Ω—Å—ã –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–≥–æ –≤–∞—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è "${referrerUser?.firstName}" –Ω–∞ –≤—ã–∏–≥—Ä—ã—à –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ.\n`;
    msg += '–ê —Ç–∞–∫–∂–µ —Ç–æ–∂–µ –º–æ–∂–µ—Ç–µ —Å–∞–º–∏ –ø–æ—É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –Ω–µ–º.\n\n'
    msg += '–£—á–∞—Å—Ç–∏–µ –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–µ "–î–µ–¥–æ–∫" –≤ –ø–µ—Ä–≤—É—é –æ—á–µ—Ä–µ–¥—å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ —Ç–æ, —á—Ç–æ–±—ã –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –≤–∞–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–≤–æ–∏–º–∏ —Ä—É–∫–∞–º–∏ —Å–¥–µ–ª–∞—Ç—å –ø—Ä–æ–µ–∫—Ç—ã, –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –≤ —Ç–æ–ø–∏–∫–µ "–û –Ω–∞—Å".\n\n'
    msg += `–°—Å—ã–ª–∫–∞ –Ω–∞ —Ä–æ–∑—ã–≥—Ä—ã—à (–∏ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ): https://t.me/ws_dedok/17/18`

    await ctx.reply(msg);
  } else {
    // –ï—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ /start –≤—ã–∑–≤–∞–Ω–∞ –±–µ–∑ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏
    await ctx.reply("–ù–∞–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /referral –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø—Ä–∏–≥–ª–∞—à–∞—Ç—å –∑–Ω–∞–∫–æ–º—ã—Ö –≤ –≥—Ä—É–ø–ø—É.");
  }
});

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏
membersBot.command("referral", async (ctx: Context) => {
  if (ctx.chat?.type !== "private") {
    return ctx.reply("–≠—Ç—É –∫–æ–º–∞–Ω–¥—É –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö —Å –±–æ—Ç–æ–º.");
  }

  const userId = String(ctx.from?.id);

  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—É—é —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
  const link = await generateReferralLink(userId);
  ctx.reply(`–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: ${link}`);
});

// –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
membersBot.on("new_chat_members", async (ctx: Context) => {
  // @ts-expect-error
  const newMembers = ctx.message?.new_chat_members;
  if (!newMembers) return;

  for (const member of newMembers) {
    if (member.is_bot) continue; // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –±–æ—Ç–æ–≤
    
    const user: UserData = {
        id: String(member.id),
        firstName: member.first_name || "–ù–µ—Ç –∏–º–µ–Ω–∏",
        username: member.username,
    }

    await updateOrSave(user);
  }
});

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
export async function runMembersBot(runMode: RunMode): Promise<void> {
  const nm = 'dedok_members_bot';
  if (runMode === 'production') {
    console.log('–£—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook –±–æ—Ç–∞:', nm);
    await membersBot.telegram.setWebhook(botUrlSuffix + "/" + nm)
    console.log('webhook –±–æ—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω:', nm)
  }
  membersBot.launch();
  console.log(`üöÄ –ë–æ—Ç ${nm} –∑–∞–ø—É—â–µ–Ω!`);
}

export async function stopMembersBot(runMode: RunMode): Promise<void> {
  const nm = 'dedok_members_bot';
  if (runMode === 'production') {
    console.log('–£–¥–∞–ª–µ–Ω–∏–µ webhook –±–æ—Ç–∞:', nm);
    await membersBot.telegram.deleteWebhook()
    console.log('webhook –±–æ—Ç–∞ —É–¥–∞–ª–µ–Ω:', nm)
  }

  membersBot.stop();
  console.log("üöÄ –ë–æ—Ç dedok_members_bot –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!");
}
